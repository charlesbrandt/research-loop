#!/bin/bash

# Configuration
TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
BARN_DIR="barn"
OUTPUT_DIR="output"
ARCHIVE_DIR_NAME="${OUTPUT_DIR}_${TIMESTAMP}"
SUBDIRS=("planning" "stories" "src" "tests" "logs")

# 1. Archive the old output directory
if [ -d "$OUTPUT_DIR" ]; then
    echo "Archiving existing '$OUTPUT_DIR' directory..."
    mkdir -p "$BARN_DIR"
    mv "$OUTPUT_DIR" "$BARN_DIR/$ARCHIVE_DIR_NAME"
    echo "Archived to '$BARN_DIR/$ARCHIVE_DIR_NAME'"
fi

# 2. Create the new output directory and subdirectories
echo "Creating new '$OUTPUT_DIR' directory..."
mkdir -p "$OUTPUT_DIR"
for subdir in "${SUBDIRS[@]}"; do
    mkdir -p "$OUTPUT_DIR/$subdir"
done
echo "Created subdirectories: ${SUBDIRS[*]}"

# 3. Initialize Git repository
echo "Initializing Git repository in '$OUTPUT_DIR'..."
git -C "$OUTPUT_DIR" init -b main
echo "Git repository initialized with default branch 'main'."

# 4. Create a .gitignore file
echo "Creating .gitignore..."
cat <<EOL > "$OUTPUT_DIR/.gitignore"
# Logs
logs/
*.log

# IDE files
.vscode/
.idea/

# Python cache
__pycache__/
*.pyc
EOL
echo "'.gitignore' created."

# 5. Create a placeholder README.md
echo "Creating placeholder README.md..."
cat <<EOL > "$OUTPUT_DIR/README.md"
# Project: [Generated Project]

This project was automatically generated by the Autonomous AI Developer Agent.

## Directories
- **/planning**: Contains the product and architecture documents.
- **/stories**: Contains the development stories.
- **/src**: Contains the application source code.
- **/tests**: Contains the tests for the application code.
- **/logs**: Contains logs from the generation process.
EOL
echo "Placeholder README.md created."

echo "Setup complete. New output directory is ready at '$OUTPUT_DIR'."
